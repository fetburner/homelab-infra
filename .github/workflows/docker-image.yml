name: Docker image

on:
  push:
    branches-ignore:
      - buildcache

concurrency:
  group: ${{ github.ref_name }}

jobs:
  enumerate-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.enumerate.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4

      - id: enumerate
        run: |
          echo "matrix=$(ls Dockerfile | jq -R -s -c '{ "name": split("\n")[:-1] }')" > $GITHUB_OUTPUT

  docker-lint:
    runs-on: ubuntu-latest
    needs:
      - enumerate-dockerfiles
    strategy:
      matrix: ${{ fromJSON(needs.enumerate-dockerfiles.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile/${{ matrix.name }}/Dockerfile

  docker-build:
    runs-on: ubuntu-latest
    needs:
      - enumerate-dockerfiles
    strategy:
      matrix: ${{ fromJSON(needs.enumerate-dockerfiles.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v4

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: Dockerfile/${{ matrix.name }}/**

      - name: Set up QEMU
        if: ${{ steps.changed-files.outputs.all_modified_files }}
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: ${{ steps.changed-files.outputs.all_modified_files }}
        uses: docker/setup-buildx-action@v3

      - name: Login to the Container registry
        if: ${{ steps.changed-files.outputs.all_modified_files }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: ${{ steps.changed-files.outputs.all_modified_files }}
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.actor }}/${{ matrix.name }}
          tags: |
            type=raw,value={{branch}}
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

      - name: Build and push
        if: ${{ steps.changed-files.outputs.all_modified_files }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile/${{ matrix.name }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
