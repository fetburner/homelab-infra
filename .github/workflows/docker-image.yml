name: Docker Build

on:
  push:
    branches-ignore:
      - buildcache

concurrency:
  group: ${{ github.ref_name }}
  cancel-in-progress: true

jobs:
  docker-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - name: mirakc
            platforms: linux/amd64,linux/arm64
            dependency: |
              ./Dockerfile/mirakc/Dockerfile
          - name: epgstation
            platforms: linux/amd64,linux/arm64
            dependency: |
              ./Dockerfile/epgstation/Dockerfile

    steps:
      - uses: actions/checkout@v3

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v46
        with:
          files: ${{ matrix.dependency }}

      - name: Set up QEMU
        if: ${{ steps.changed-files.outputs.all_modified_files }}
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        if: ${{ steps.changed-files.outputs.all_modified_files }}
        uses: docker/setup-buildx-action@v2

      - name: Login to the Container registry
        if: ${{ steps.changed-files.outputs.all_modified_files }}
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.actor }}/${{ matrix.name }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

      - name: Build and push
        if: ${{ steps.changed-files.outputs.all_modified_files }}
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile/${{ matrix.name }}/Dockerfile
          platforms: ${{ matrix.platforms }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
