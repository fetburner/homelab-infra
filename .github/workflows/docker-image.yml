name: Docker image

on:
  push:
    branches-ignore:
      - buildcache

jobs:
  enumerate-dockerfiles:
    runs-on: ubuntu-latest
    outputs:
      name: ${{ steps.enumerate.outputs.name }}
    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          list-files: json
          filters: |
            changed:
              - 'Dockerfile/**'

      - id: enumerate
        run: |
          echo "name=$(jq -c "$JQ_FILTER" <<< "$JQ_INPUT_JSON")" > $GITHUB_OUTPUT
        env:
          JQ_INPUT_JSON: ${{ steps.filter.outputs.changed_files }}
          JQ_FILTER: 'map( capture("^Dockerfile/(?<a>[a-zA-Z0-9_-]+)/") | .a ) | unique | .'

  docker-lint:
    runs-on: ubuntu-latest
    needs:
      - enumerate-dockerfiles
    if: ${{ needs.enumerate-dockerfiles.outputs.name != '' && toJson(fromJson(needs.enumerate-dockerfiles.outputs.name)) != '[]' }}

    strategy:
      matrix:
        name: ${{ fromJSON(needs.enumerate-dockerfiles.outputs.name) }}

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile/${{ matrix.name }}/Dockerfile

  docker-build:
    runs-on: ubuntu-latest
    needs:
      - enumerate-dockerfiles
    if: ${{ needs.enumerate-dockerfiles.outputs.name != '' && toJson(fromJson(needs.enumerate-dockerfiles.outputs.name)) != '[]' }}

    strategy:
      matrix:
        name: ${{ fromJSON(needs.enumerate-dockerfiles.outputs.name) }}

    steps:
      - uses: actions/checkout@v5
        with:
          submodules: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.actor }}/${{ matrix.name }}
          tags: |
            type=sha
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'master') }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile/${{ matrix.name }}/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
