apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: default-deny-all
spec:
  podSelector: {}
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-dns-all
spec:
  podSelector: {}
  policyTypes:
    - Egress
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: kube-system
      ports:
        - protocol: TCP
          port: 53
        - protocol: UDP
          port: 53
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: grafana-allow
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: grafana
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: cloudflared
          namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cloudflared
      ports:
        - protocol: TCP
          port: 3000
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: thanos-querier
      ports:
        - protocol: TCP
          port: 10902
    - ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 4000
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-querier-allow
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: thanos-querier
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: grafana
      ports:
        - protocol: TCP
          port: 10902
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: thanos-sidecar
      ports:
        - protocol: TCP
          port: 10091
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: thanos-store-gateway
      ports:
        - protocol: TCP
          port: 10091
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-store-gateway-allow
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: thanos-store-gateway
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: thanos-querier
      ports:
        - protocol: TCP
          port: 10091
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: rook-ceph-rgw
          namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: rook-ceph
      ports:
        - protocol: TCP
          port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-sidecar-allow
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: thanos-sidecar
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: thanos-querier
      ports:
        - protocol: TCP
          port: 10091
  egress:
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: snmp-exporter
      ports:
        - protocol: TCP
          port: 9116
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: node-exporter
      ports:
        - protocol: TCP
          port: 9100
    - to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: cloudflared
          namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: cloudflared
      ports:
        - protocol: TCP
          port: 2000
    - to:
        - ipBlock:
            cidr: 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 6443
    - to:
        - ipBlock:
            cidr: 192.168.0.0/16
      ports:
        - protocol: TCP
          port: 10250
    - to:
        - podSelector:
            matchLabels:
              app: rook-ceph-rgw
          namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: rook-ceph
      ports:
        - protocol: TCP
          port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: node-exporter-allow
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: node-exporter
  policyTypes:
    - Ingress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: thanos-sidecar
      ports:
        - protocol: TCP
          port: 9100
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: snmp-exporter-allow
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: snmp-exporter
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: thanos-sidecar
      ports:
        - protocol: TCP
          port: 9116
  egress:
    - to:
        - ipBlock:
            cidr: 192.168.0.0/16
      ports:
        - protocol: UDP
          port: 161
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: thanos-compactor-allow
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: thanos-compactor
  policyTypes:
    - Egress
  egress:
    - to:
        - podSelector:
            matchLabels:
              app: rook-ceph-rgw
          namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: rook-ceph
      ports:
        - protocol: TCP
          port: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: mysqldump-allow
spec:
  podSelector:
    matchLabels:
      app.kubernetes.io/name: mysqldump
  policyTypes:
    - Egress
  egress:
    - ports:
        - protocol: TCP
          port: 3306
