apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: mirakc
    app.kubernetes.io/name: epgstation-mirakc
    app.kubernetes.io/part-of: epgstation
  name: epgstation-mirakc
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: epgstation-mirakc
  servicename: mirakc
  template:
    metadata:
      labels:
        app.kubernetes.io/name: epgstation-mirakc
    spec:
      containers:
        - name: mirakc
          image: ghcr.io/fetburner/mirakc
          args:
            - "--config"
            - "/mirakc-config/config.yml"
          env:
            - name: MIRAKC_CONFIG
              value: /mirakc-config/config.yml
          ports:
            - containerPort: 40772
          volumeMounts:
            - name: mirakc-config
              mountPath: /mirakc-config
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /api/status
              port: 40772
              httpHeaders:
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /api/status
              port: 40772
              httpHeaders:
            initialDelaySeconds: 3
            periodSeconds: 10
      imagePullSecrets:
        - name: dockerconfigjson-ghcr
      volumes:
        - name: mirakc-config
          configMap:
            name: epgstation-mirakc
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/component: epgstation
    app.kubernetes.io/name: epgstation-epgstation
    app.kubernetes.io/part-of: epgstation
  name: epgstation-epgstation
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: epgstation-epgstation
  servicename: epgstation
  template:
    metadata:
      labels:
        app.kubernetes.io/name: epgstation-epgstation
    spec:
      containers:
        - name: epgstation
          image: ghcr.io/fetburner/epgstation
          ports:
            - containerPort: 8888
          volumeMounts:
            - name: epgstation-config
              mountPath: /app/config
            - name: epgstation-upload
              mountPath: /app/data/upload
          securityContext:
            privileged: true
            readOnlyRootFilesystem: true
          readinessProbe:
            httpGet:
              path: /api/version
              port: 8888
              httpHeaders:
            initialDelaySeconds: 3
            periodSeconds: 3
          livenessProbe:
            httpGet:
              path: /api/version
              port: 8888
              httpHeaders:
            initialDelaySeconds: 3
            periodSeconds: 10
      imagePullSecrets:
        - name: dockerconfigjson-ghcr
      volumes:
        - name: epgstation-upload
          emptyDir:
